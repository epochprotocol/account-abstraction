/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ByteManipulationLibrary,
  ByteManipulationLibraryInterface,
} from "../../../../contracts/flattened/EpochRegistry.sol/ByteManipulationLibrary";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "position",
        type: "uint256",
      },
    ],
    name: "getDynamicData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "position",
        type: "uint256",
      },
    ],
    name: "getDynamicSizeDynamicArrayData",
    outputs: [
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "position",
        type: "uint256",
      },
    ],
    name: "getFixedData",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "position",
        type: "uint256",
      },
    ],
    name: "getFixedSizeDynamicArrayData",
    outputs: [
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "position",
        type: "uint256",
      },
    ],
    name: "getStaticArrayData",
    outputs: [
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "dataToOverwrite",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "position",
        type: "uint32",
      },
    ],
    name: "overwriteStaticDataWithSignature",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "dataToOverwrite",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "position",
        type: "uint32",
      },
    ],
    name: "overwriteStaticDataWithoutSignature",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610d5361003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100875760003560e01c806372b2489a1161006557806372b2489a146100e55780639523baae146100f8578063df3a08e214610118578063e9da145d1461012b57600080fd5b806315751a4f1461008c5780631f40b874146100b2578063390fe6a5146100d2575b600080fd5b61009f61009a36600461090b565b61013e565b6040519081526020015b60405180910390f35b6100c56100c036600461090b565b61017c565b6040516100a991906109d1565b6100c56100e036600461090b565b6102e8565b6100c56100f336600461090b565b6104d7565b61010b610106366004610a51565b6106e6565b6040516100a99190610ab9565b61010b61012636600461090b565b6107a1565b61010b610139366004610a51565b6108b3565b60008061014c602084610b02565b9050600061015b602083610b3f565b905061016981838789610b57565b61017291610b81565b9695505050505050565b6060600061018b602084610b02565b9050600061019a602083610b3f565b905060006101aa8284888a610b57565b6101b391610b81565b90508060006101c3602083610b3f565b905060006101d382848b8d610b57565b6101dc91610b81565b905060008167ffffffffffffffff8111156101f9576101f9610bbe565b60405190808252806020026020018201604052801561022c57816020015b60608152602001906001900390816102175790505b50905082600061023d602083610b3f565b905060005b848110156102d6578d8d8490849261025c93929190610b57565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050865187925084915081106102a4576102a4610bed565b6020026020010181905250819250602060ff16836102c29190610b3f565b9150806102ce81610c1c565b915050610242565b50919c9b505050505050505050505050565b606060008080808080806102fd60208a610b02565b9050600061030c602083610b3f565b905061031a81838d8f610b57565b61032391610b81565b9450849250610333602084610b3f565b935061034184868d8f610b57565b61034a91610b81565b95506103568684610b3f565b9750610363602089610b3f565b9650600091506103769050602086610c54565b905060008167ffffffffffffffff81111561039357610393610bbe565b6040519080825280602002602001820160405280156103c657816020015b60608152602001906001900390816103b15790505b50905060005b828110156104c75760008d8d8b908b926103e893929190610b57565b6103f191610b81565b905060008e8a8f6104028583610b3f565b9261040f93929190610b57565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505086519293508392879250869150811061045c5761045c610bed565b6020026020010181905250869750602060ff168861047a9190610b3f565b96508e8e8990899261048e93929190610b57565b61049791610b81565b98506104a38987610b3f565b9a506104b060208c610b3f565b9950505080806104bf90610c1c565b9150506103cc565b509b9a5050505050505050505050565b60606000808080808080806104ed60208b610b02565b905060006104fc602083610b3f565b905060008d8d8490849261051293929190610b57565b61051b91610b81565b9050600061052a602083610b3f565b90508e8e8390839261053e93929190610b57565b61054791610b81565b909750935086610558602082610b3f565b96508095508e8e8990899261056f93929190610b57565b61057891610b81565b98506105848987610b3f565b9a5061059160208c610b3f565b99505050505060008167ffffffffffffffff8111156105b2576105b2610bbe565b6040519080825280602002602001820160405280156105e557816020015b60608152602001906001900390816105d05790505b50905060005b828110156104c75760008d8d8b908b9261060793929190610b57565b61061091610b81565b905060008e8a8f6106218583610b3f565b9261062e93929190610b57565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505086519293508392879250869150811061067b5761067b610bed565b6020026020010181905250869750602060ff16886106999190610b3f565b96508e8e899089926106ad93929190610b57565b6106b691610b81565b98506106c28987610b3f565b9a506106cf60208c610b3f565b9950505080806106de90610c1c565b9150506105eb565b606060006106f5602084610c8f565b610700906004610cbb565b9050600061070f602083610cbb565b905036600061072663ffffffff8516828a8c610b57565b90925090503660006107408a63ffffffff8716818e610b57565b91509150600084848b60405160200161075b93929190610ce3565b604051602081830303815290604052905080838360405160200161078193929190610cf5565b604051602081830303815290604052975050505050505050949350505050565b606060006107b0602084610b02565b905060006107bf602083610b3f565b905060006107cf8284888a610b57565b6107d891610b81565b90508060006107e8602083610b3f565b905060006107f882848b8d610b57565b61080191610b81565b905060008167ffffffffffffffff81111561081e5761081e610bbe565b6040519080825280601f01601f191660200182016040528015610848576020820181803683370190505b5090508260006108588483610b3f565b90508c8c8390839261086c93929190610b57565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929c505050505050505050505050509392505050565b60606000610700602084610c8f565b60008083601f8401126108d457600080fd5b50813567ffffffffffffffff8111156108ec57600080fd5b60208301915083602082850101111561090457600080fd5b9250929050565b60008060006040848603121561092057600080fd5b833567ffffffffffffffff81111561093757600080fd5b610943868287016108c2565b909790965060209590950135949350505050565b60005b8381101561097257818101518382015260200161095a565b83811115610981576000848401525b50505050565b6000815180845261099f816020860160208601610957565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610a44577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452610a32858351610987565b945092850192908501906001016109f8565b5092979650505050505050565b60008060008060608587031215610a6757600080fd5b843567ffffffffffffffff811115610a7e57600080fd5b610a8a878288016108c2565b90955093505060208501359150604085013563ffffffff81168114610aae57600080fd5b939692955090935050565b602081526000610acc6020830184610987565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b3a57610b3a610ad3565b500290565b60008219821115610b5257610b52610ad3565b500190565b60008085851115610b6757600080fd5b83861115610b7457600080fd5b5050820193919092039150565b80356020831015610bb8577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b165b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c4d57610c4d610ad3565b5060010190565b600082610c8a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600063ffffffff80831681851681830481118215151615610cb257610cb2610ad3565b02949350505050565b600063ffffffff808316818516808303821115610cda57610cda610ad3565b01949350505050565b82848237909101908152602001919050565b60008451610d07818460208901610957565b820183858237600093019283525090939250505056fea26469706673582212202f3cebcb1145c7ed6e4abbe481a8f57ab5e80946d9f992014ea76b66bd832b9f64736f6c634300080f0033";

type ByteManipulationLibraryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ByteManipulationLibraryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ByteManipulationLibrary__factory extends ContractFactory {
  constructor(...args: ByteManipulationLibraryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ByteManipulationLibrary> {
    return super.deploy(overrides || {}) as Promise<ByteManipulationLibrary>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ByteManipulationLibrary {
    return super.attach(address) as ByteManipulationLibrary;
  }
  override connect(signer: Signer): ByteManipulationLibrary__factory {
    return super.connect(signer) as ByteManipulationLibrary__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ByteManipulationLibraryInterface {
    return new utils.Interface(_abi) as ByteManipulationLibraryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ByteManipulationLibrary {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ByteManipulationLibrary;
  }
}
